---
import '../styles/Global.css';
import { Image } from 'astro:assets';
import x from '@assets/icons/x.svg';


var costs = [
	
    {
        "name" : "Total Cost of Tires", 
        "answers": ["Direct", "Variable"]
    },
    {
        "name" : "Total Cost of Rent", 
        "answers": ["Indirect", "Fixed"]
    }
]

const { randomCostIndex } = Astro.props;
const randomIndex = Math.floor(Math.random() * costs.length);


---

<div class = "container" data-random-index={randomIndex}>
    <!-- <Image class = "x" src = {x} alt = ""></Image>-->
    <div class = "a">
        {0 !== null ? (
            <div>
              <p class="selected">
                {costs[0].name}
              </p>
            </div>
          ) : (
            <p>No more items to select</p>
          )}
    </div>
    <form class="b">
        <div class="left">
            <div class = "btn">
                <input class = "option" type="radio" id="direct" name="classA" value="Direct">
                <label for="direct">Direct</label><br>
            </div>
            <div class = "btn">
                <input  class = "option" type="radio" id="indirect" name="classA" value="Indirect">
                <label for="indirect">Indirect</label><br>
            </div>     

          
        </div>
    
        <div class="right">
            <div class = "btn">
                <input  class = "option" type="radio" id="fixed" name="classB" value="Fixed">
                <label for="fixed">Fixed</label><br>
            </div>     
            <div class = "btn">
                <input  class = "option" type="radio" id="variable" name="classB" value="Variable">
                <label for="variable">Variable</label><br>
            </div>     
        </div>
    </form>
    

    
    <div class = "c">
        <div class = "controls question"></div>
        <div class = "controls leftBtn" id = "submitBtn">Check</div>
        <div class = "controls rightBtn" id = "nextBtn"></div>   
        <div id="grade"></div>
        <button onclick="location.reload()">Next</button>

    </div>

    

</div>
<script>
    var costs = [
        {
            "name": "Total Cost of Tires",
            "answers": ["Direct", "Variable"]
        },
        {
            "name": "Total Cost of Rent",
            "answers": ["Indirect", "Fixed"]
        }
    ];

    // Initialize the index tracker
    var costChosen = -1;

    function getRandomIndex() {
        // Generate a random index
        return Math.floor(Math.random() * costs.length);
    }

    function resetUI() {
        // Reset UI elements as needed
        // For example, clear radio button selections
        const radioA = document.querySelector('input[name="classA"]:checked') as HTMLInputElement;
        const radioB = document.querySelector('input[name="classB"]:checked') as HTMLInputElement;

        if (radioA) {
            radioA.checked = false;
        }

        if (radioB) {
            radioB.checked = false;
        }

        // Additional UI reset logic...

        // Get a new random index
        costChosen = getRandomIndex();
        
        // Display the new cost based on the random index
        console.log("Current cost: ", costs[costChosen].name);
    }

    var submitButton = document.getElementById("submitBtn");
    var nextButton = document.getElementById("nextBtn");

    // Attach a click event handler to the submit button
    submitButton.addEventListener("click", function () {
        var selectedRadioButton = document.querySelector('input[name="classA"]:checked') as HTMLInputElement;
        var selectedRadioButton2 = document.querySelector('input[name="classB"]:checked') as HTMLInputElement;

        // Check if any radio button is selected
        if (selectedRadioButton && selectedRadioButton2) {
            // Access the value property of the selected radio buttons
            const selectedValueA = selectedRadioButton.value;
            const selectedValueB = selectedRadioButton2.value;

            // Compare the selected values with the correct answers
            if (selectedValueA === costs[costChosen].answers[0] && selectedValueB === costs[costChosen].answers[1]) {
                alert('Correct!');
            } else {
                alert('Incorrect!');
            }
        } else {
            alert('No option selected.');
        }
    });

    // Attach a click event handler to the next button
    nextButton.addEventListener("click", function () {
        resetUI();
    });

    // Initial setup when the page loads
    resetUI();
</script>



<style>
    #submitBtn{

    }
    .container{
        border: var(--border);
        width:100%;
        height:50%;
        display: flex;
        flex-direction: column;
        gap:1em;
        padding:20px;

    }
    .a {
        border: var(--border);
        width:100%;
        height:20%;
        display: flex;
        flex-direction: column;
        gap:1em;
        justify-content: center;
        align-items: center;
    }
    .b{
        border: var(--border);
        display: flex;
        height:50%;
        width:100%;
        justify-content: center;
        align-items: center;
    }

    .c{
        border: var(--border);
        display: flex;
        height:20%;
        width:100%;
        justify-content: center;
        align-items: center; 
        gap:1em;
    }
    .left, .right {
        width:50%;
        border: var(--border);
        display: flex;
        height:100%;
        flex-direction: column;
        padding:10px;
        gap:1em;
    }

    

    .controls{
        border: var(--border);
        border-radius:50%;
        height:30px;
        width:30px;
    }
</style>

